$date
	Fri Feb 21 16:25:13 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu $end
$var wire 32 ! a [31:0] $end
$var wire 4 " alu_op [3:0] $end
$var wire 32 # b [31:0] $end
$var wire 1 $ zero $end
$var parameter 4 % ALU_ADD $end
$var parameter 4 & ALU_AND $end
$var parameter 4 ' ALU_OR $end
$var parameter 4 ( ALU_SLL $end
$var parameter 4 ) ALU_SLT $end
$var parameter 4 * ALU_SRA $end
$var parameter 4 + ALU_SRL $end
$var parameter 4 , ALU_SUB $end
$var parameter 4 - ALU_XOR $end
$var reg 32 . result [31:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 -
b1 ,
b110 +
b111 *
b1000 )
b101 (
b11 '
b10 &
b0 %
$end
#0
$dumpvars
b1011011 .
0$
b1 #
b11 "
b1011011 !
$end
#1000
b1000 .
b101001 #
b1011110 !
b10 "
#2000
b10000001 .
b1001000 #
b111001 !
b0 "
#3000
b1100100 .
b101101 #
b110111 !
#4001
